plugins {

    id 'java'
}

apply plugin: "maven"
apply plugin: "maven-publish"
apply plugin: "java"

sourceCompatibility = 14

group 'uk.co.innoxium.cybernize'
version '1.0-SNAPSHOT'

project.ext.sevenZipVersion = "16.02-2.01"
def repsyUser = "user"
def repsyPass = "passw"

repositories {

    jcenter()
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.13.2'


    implementation "org.apache.commons:commons-lang3:3.12.0"
    implementation "commons-io:commons-io:2.8.0"
    implementation "org.apache.commons:commons-math3:3.6.1"

    implementation "org.ini4j:ini4j:0.5.4"

    implementation "com.google.guava:guava:30.1.1-jre"
    implementation "com.google.code.gson:gson:2.8.6"

    implementation "com.electronwill.night-config:core:3.6.3"
    implementation "com.electronwill.night-config:toml:3.6.3"

    implementation "net.sf.sevenzipjbinding:sevenzipjbinding:${project.ext.sevenZipVersion}"
    implementation "net.sf.sevenzipjbinding:sevenzipjbinding-all-platforms:${project.ext.sevenZipVersion}"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

tasks.withType(Javadoc) {

    failOnError false
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}
jar.finalizedBy javadocJar
jar.finalizedBy sourcesJar

publishing {

    publications {

        CybernizePublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId 'uk.co.innoxium.cybernize'
            artifactId 'cybernize'
            version '1.1.6'
        }
    }
    repositories {

        maven {

            url "https://repo.repsy.io/mvn/innoxium/innoxium"
            credentials {

                username repsyUser
                password repsyPass
            }
        }
    }
}
